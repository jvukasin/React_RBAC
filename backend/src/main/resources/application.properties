spring.application.name = backend

spring.datasource.url = jdbc:mysql://${DB_ADDRESS}/backend_msc?useSSL=false&createDatabaseIfNotExist=true
spring.datasource.username =${DB_USER}
spring.datasource.password = ${DB_PASS}

#korisno ako je konekcija dugo u idle stanju
spring.datasource.dbcp.test-while-idle = true
spring.datasource.dbcp.validation-query = SELECT 1
#JPA-Hibernate
spring.jpa.show-sql = false
#kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi sa radom dropuje ih
spring.jpa.hibernate.ddl-auto = create-drop
#bira najbolje konvencije imenovanja za tabele i polja u bazi
spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.datasource.initialization-mode=always
#optimizacija za mysql upite
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Define a custom port instead of the default 8080
server.port=8081